plugins {
    id 'java-gradle-plugin'

    id 'groovy'
    id 'jacoco'
    id 'maven-publish'
    id 'com.github.kt3k.coveralls' version '2.8.4'
}

publishing {
    publications {
        pluginMaven(MavenPublication) {
            groupId = 'com.softeq.gradle.itest'
            artifactId = 'com.softeq.gradle.itest.gradle.plugin'
            version = '1.0'
        }
    }
}

repositories {
    jcenter()
}

dependencies {
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
}

gradlePlugin {
    plugins {
        itest {
            id = 'com.softeq.gradle.itest'
            implementationClass = 'com.softeq.gradle.itest.ItestPlugin'
        }
    }
}

sourceSets {
    functionalTest {
    }
}

gradlePlugin.testSourceSets(sourceSets.functionalTest)
configurations.functionalTestImplementation.extendsFrom(configurations.testImplementation)

task functionalTest(type: Test) {
    testClassesDirs = sourceSets.functionalTest.output.classesDirs
    classpath = sourceSets.functionalTest.runtimeClasspath
}

def jacocoFiles = project.fileTree(project.buildDir).include("/jacoco/*.exec")

jacocoTestReport {
    executionData(jacocoFiles)
    reports { xml.enabled = true }
}

coveralls {
    jacocoReportPath 'build/reports/jacoco/test/jacocoTestReport.xml'
}

check {
    dependsOn(tasks.functionalTest)
    dependsOn(tasks.jacocoTestReport)
}
